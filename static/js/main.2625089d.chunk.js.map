{"version":3,"sources":["hoc/AuxHoc.js","components/Cards/Card/Card.module.css","components/Cards/Cards.module.css","Layout/Layout.module.css","containers/TODO.module.css","components/Cards/Card/Card.js","components/Cards/Cards.js","containers/TODO.js","Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["aux","props","children","module","exports","card","className","classes","container","header","heading","detail","onClick","remove","cards","map","el","Card","key","id","removeCard","Cards","TODOApp","state","counter","cardDetailInput","dialogVisible","addCard","updatedCount","newCard","setState","window","localStorage","setItem","JSON","stringify","alert","index","indexOf","find","x","console","log","splice","doAction","url","xml","XMLHttpRequest","open","send","response","responseText","this","document","addEventListener","event","keyCode","which","cardsData","getItem","length","parse","newCount","reduce","p","c","value","onChange","e","target","label","icon","iconPos","footer","visible","onHide","closeOnEscape","dismissableMask","Component","withRouter","items","command","history","push","model","todoAppLabel","AsyncComponentEWallet","React","lazy","App","authorization","todoapp","ewallet","Layout","strict","render","fallback","path","from","to","component","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2625089d.chunk.js","sourcesContent":["const aux = (props)=>props.children;\r\nexport default aux;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3Py59\",\"header\":\"Card_header__l6ShH\",\"container\":\"Card_container__eHBgt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cards\":\"Cards_Cards__3XFUP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoAppLabel\":\"Layout_todoAppLabel__2Yz7V\",\"left\":\"Layout_left__3KqLB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoAppLabel\":\"TODO_todoAppLabel__-VccZ\",\"left\":\"TODO_left__39rUX\"};","import React from 'react'\r\nimport classes from './Card.module.css'\r\nconst card = (props) => {\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.card}>\r\n                <div className={classes.header}>{props.heading}</div>\r\n                <div>{props.detail}</div>\r\n                <button onClick={props.remove}>DISMISS</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default card;","import React from 'react'\r\nimport Card from './Card/Card'\r\nimport classes from './Cards.module.css'\r\nconst cards = (props) => {\r\n    const cards = props.cards.map(el => (\r\n        <Card\r\n            key={el.id}\r\n            heading={el.heading}\r\n            detail={el.detail}\r\n            remove={() => props.removeCard(el.id)}>\r\n        </Card>\r\n    ))\r\n    return (\r\n        <div className={classes.Cards}>\r\n            {cards}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default cards;","import React, { Component } from 'react'\r\nimport Aux from '../hoc/AuxHoc'\r\nimport Cards from '../components/Cards/Cards'\r\nimport classes from './TODO.module.css'\r\nimport { Button } from 'primereact/button'\r\nimport { Menubar } from 'primereact/menubar'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { Card } from 'primereact/card'\r\nimport 'primereact/resources/themes/rhea/theme.css'\r\n// import 'primereact/resources/themes/nova-dark/theme.css'\r\n// import 'primereact/resources/themes/luna-amber/theme.css'\r\n// import 'primereact/resources/themes/luna-green/theme.css'\r\nimport { Dialog } from 'primereact/dialog'\r\nimport 'primereact/resources/primereact.min.css'\r\nimport 'primeicons/primeicons.css'\r\nclass TODOApp extends Component {\r\n    state = {\r\n        counter: 1,\r\n        cards: [],\r\n        cardDetailInput: '',\r\n        dialogVisible: false\r\n    }\r\n    \r\n    componentDidMount() {\r\n        console.log(\"TODO - APP\", this.props);\r\n        document.addEventListener('keypress', (event) => {\r\n            if (event.keyCode === 13 || event.which === 13) {\r\n                this.addCard('#' + this.state.counter, this.state.cardDetailInput);\r\n            }\r\n        });\r\n        const cardsData = window.localStorage.getItem('cardsData');\r\n        if (cardsData && cardsData.length > 0) {\r\n            this.setState({ cards: [...this.state.cards, ...JSON.parse(cardsData)] });\r\n            var newCount = JSON.parse(cardsData).reduce((p, c) => p.id > c.id ? p : c, []).id;\r\n            if (newCount)\r\n                this.setState({ counter: newCount });\r\n        }\r\n    }\r\n\r\n    addCard = (heading, detail) => {\r\n        if (detail) {\r\n            const oldCount = this.state.counter;\r\n            const updatedCount = oldCount + 1;\r\n            const newCard = {\r\n                id: updatedCount,\r\n                heading: heading,\r\n                detail: detail\r\n            }\r\n            this.setState({ counter: updatedCount, cards: [...this.state.cards, newCard] });\r\n            this.setState({ cardDetailInput: '' });\r\n\r\n            window.localStorage.setItem('cardsData', JSON.stringify([...this.state.cards, newCard]));\r\n        }\r\n        else {\r\n            alert('Enter Detail');\r\n        }\r\n    }\r\n    removeCard = (id) => {\r\n        var cards = [...this.state.cards];\r\n        const index = cards.indexOf(cards.find(x => x.id === id));\r\n        console.log(index);\r\n\r\n        if (index !== -1) {\r\n            cards.splice(index, 1);\r\n            this.setState({ cards: cards });\r\n        }\r\n        window.localStorage.setItem('cardsData', JSON.stringify(cards));\r\n    }\r\n\r\n    doAction = (url) => {\r\n        var xml = new XMLHttpRequest();\r\n        xml.open(\"Get\", url, false);\r\n        xml.send(null);\r\n        const response = xml.responseText;\r\n        this.setState({ response: response });\r\n        console.log(this.state.response);\r\n    }\r\n    render() {\r\n        const cardstyle = {\r\n            maxWidth: '250px',\r\n            textAlign: 'center'\r\n        };\r\n        return (\r\n            <Aux>\r\n                <div>\r\n                    <Cards cards={this.state.cards} removeCard={this.removeCard}></Cards>\r\n                </div>\r\n                {/* <Card title='Title' subTitle='Subtitle' style={cardstyle}></Card> */}\r\n                <InputText\r\n                    value={this.state.cardDetailInput}\r\n                    onChange={(e) => this.setState({ cardDetailInput: e.target.value })}>\r\n                </InputText>\r\n                <Button label='Add Card' icon='pi pi-check' iconPos='right' onClick={\r\n                    () => this.addCard('#' + this.state.counter, this.state.cardDetailInput)\r\n                }></Button>\r\n                <Dialog header=\"Header\" footer=\"Footer\" visible={this.state.dialogVisible}\r\n                    onHide={() => { this.setState({ dialogVisible: false , cardDetailInput: ''}) }}\r\n                    closeOnEscape={true}\r\n                    dismissableMask={true}\r\n                >\r\n                    <InputText\r\n                        value={this.state.cardDetailInput}\r\n                        onChange={(e) => this.setState({ cardDetailInput: e.target.value })}>\r\n                    </InputText>\r\n                    <Button label='Add Card' icon='pi pi-check' iconPos='right' onClick={\r\n                        () => this.addCard('#' + this.state.counter, this.state.cardDetailInput)\r\n                    }></Button>\r\n                </Dialog>\r\n                <Button label='Show Dialog'\r\n                    onClick={() => { this.setState(p => { return { dialogVisible: !p.dialogVisible } }) }}\r\n                />\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TODOApp;","import React from 'react'\r\nimport Aux from '../hoc/AuxHoc'\r\nimport classes from './Layout.module.css'\r\nimport { Menubar } from 'primereact/menubar'\r\nimport { withRouter } from 'react-router-dom'\r\n// import classes from './Layout.module.css'\r\n\r\n// let history = createBrowserHistory();\r\n\r\nconst layout = (props) => {\r\n    const items = [\r\n        {\r\n            label: 'File',\r\n            icon: 'pi pi-fw pi-file',\r\n            items: [\r\n                {\r\n                    label: 'New',\r\n                    icon: 'pi pi-fw pi-plus',\r\n                }\r\n            ],\r\n        },\r\n        {\r\n            label: 'TODOApp',\r\n            command: () => {console.log(\"PROPS\",props); props.history.push('/todoapp');}\r\n        },\r\n        {\r\n            label: 'E-Wallet',\r\n            command: () => {props.history.push('/ewallet');}\r\n        }\r\n    ];\r\n    return (\r\n        <Aux>\r\n            {/* <Router history={history}> */}\r\n                <Menubar model={items} >\r\n                    <div className={classes.todoAppLabel}>TODO APP</div>\r\n                </Menubar>\r\n                {/* <Route strict component={EWallet} path='/ewallet'></Route> */}\r\n                {/* <Route strict component={TODOApp} path='/todoapp'></Route> */}\r\n            {/* </Router> */}\r\n            <main>{props.children}</main>\r\n        </Aux>\r\n    )\r\n};\r\n\r\nexport default withRouter(layout);","import React, { Component, Suspense } from 'react';\nimport TODOApp from './containers/TODO'\n// import EWallet from './containers/EWallet'\nimport Layout from './Layout/Layout'\n// import asyncComponent from './hoc/AsyncComponent'\nimport { Router, Route, NavLink, BrowserRouter, Redirect, Switch } from 'react-router-dom'\n\nimport './App.css';\n// const AsyncComponentEWallet = asyncComponent(() => {\n//   return import('./containers/EWallet');\n// })\nconst AsyncComponentEWallet = React.lazy(() => {\n  return import('./containers/EWallet');\n})\nclass App extends Component {\n  state = {\n    authorization: {\n      todoapp: true,\n      ewallet: true,\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <Router history={this.state.history}> */}\n        <BrowserRouter>\n          <Layout>\n            {/* <TODOApp></TODOApp>\n            <EWallet></EWallet> */}\n            <Switch>\n              {this.state.authorization.ewallet ?\n                (<Route strict render={() =>\n                  <Suspense fallback={<div>Loading ...</div>}>\n                    <AsyncComponentEWallet></AsyncComponentEWallet>\n                  </Suspense>\n                } path='/ewallet' />) :\n                <Redirect from=\"/ewallet\" to=\"/notauthorized\" />\n              }\n              <Route strict component={TODOApp} path='/todoapp' />\n              <Route strict render={() => <h1>NOT AUTHORIZED TO ACCESS PAGE</h1>} path='/notauthorized' />\n              <Redirect from=\"/\" to=\"/todoapp\" />\n              <Route render={() => <h1>PAGE NOT FOUND!</h1>} />\n            </Switch>\n          </Layout>\n        </BrowserRouter>\n        {/* </Router> */}\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}